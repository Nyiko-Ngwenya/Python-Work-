scopes 

must know that global that is changinged in function and can be called from anywhere // global var = new_value
 
nonlogical // def myfunc1():
  x = "John"
  def myfunc2():
    x = "hello"
  myfunc2() 
  return x

print(myfunc1())
enclosed functions

result is John it will not change the outer variable if we add nonlocal it will


default function parameter  // def funcName(number,pow=1):
				    new_value = number ** pow
				    return new_value
				power(9,2)  it takes two parameters but if one isnt specified it gives default 1

flexible arguments means the user can add as many arguments if you dont know the actual parameteres

//def  add_all(*args)
	sum_all = 0
	
	for num in args: //we loop through each argument
	    sum+= num
	return sum_all
to use function  // add_all(5,23,9) will add


Kwags is //  different is that it allows you to pass a variable number of keyword arguments to functions
to have the kwargs (give the argument assignment to a variable) 
// def print_all(**kwargs):  #kwargs are a dictionary
	for key,value in kwargs.items():
	  print(key + ': '+ value)
to use the kwargs // print_all(name='harry',sur='potter')