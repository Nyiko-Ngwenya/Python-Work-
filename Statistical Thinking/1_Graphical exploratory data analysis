how to import seaborn // import seaborn as sns
to set seaborn settings as default // sns.set()
how to create bee swarm // _ = sns.swarmplot(x='col 1',y= 'col 2', data = dataframeName)
making an ecdf // x = np.sort(df['the column to sort'])
y= np.arange(1,len(x)+1) / len(x)

_ = plt.plot(x,y,marker='.',linestyle='none')
_ = plt.xlabel('percent of vote for Obama')
_ = plt.ylabel('ECDF')
plt.margins(0.02) 

to keep data of edgees // plt.margins(0.02) 

EXAMPLE OF ECDF FUNCTION


def ecdf(data):
    """Compute ECDF for a one-dimensional array of measurements."""
    # Number of data points: n
    n = len(data)

    # x-data for the ECDF: x
    x = np.sort(data)

    # y-data for the ECDF: y
    y = np.arange(1,n+1) / n

    return x, y



EXAMPLE OF SEVERAL ECDF ON ONE PLOT


# Compute ECDFs
x_set, y_set = ecdf(setosa_petal_length )
x_vers, y_vers = ecdf(versicolor_petal_length )
x_virg, y_virg = ecdf(virginica_petal_length)



# Plot all ECDFs on the same plot
_ = plt.plot(x_set,y_set,marker='.',linestyle='none')
_ = plt.plot(x_vers, y_vers,marker='.',linestyle='none')
_ = plt.plot(x_virg, y_virg,marker='.',linestyle='none')

# Annotate the plot
plt.legend(('setosa', 'versicolor', 'virginica'), loc='lower right')
_ = plt.xlabel('petal length (cm)')
_ = plt.ylabel('ECDF')

# Display the plot
plt.show()










