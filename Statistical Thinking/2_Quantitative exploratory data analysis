median is 50% percentile

to get percentiles np.percentile(df['column'],[25,50,75])

an outlier is more than 1.5 IQR .

EXAMPLE OF PERCENTILES


# Specify array of percentiles: percentiles
percentiles = np.array([2.5, 25, 50, 75, 97.5])

# Compute percentiles: ptiles_vers
ptiles_vers = np.percentile(versicolor_petal_length,percentiles)

# Print the result
print(ptiles_vers)


EXAMPLE OF BOXPLOT IN SEABORN

sns.boxplot(x='col',y='col2',data=df)


to get variance // np.var()

the square root of the variance is standard deviation .

EXAMPLE OF VARIANCE


# Array of differences to mean: differences
differences = np.array(versicolor_petal_length-versicolor_petal_length.mean())

# Square the differences: diff_sq
diff_sq = differences**2

# Compute the mean square difference: variance_explicit
variance_explicit  = diff_sq.mean()

# Compute the variance using NumPy: variance_np
variance_np = np.var(versicolor_petal_length)

# Print the results
print(variance_explicit,variance_np)


EXAMPLE OF VARIANCE AND STD


# Compute the variance: variance
variance = np.var(versicolor_petal_length)

# Print the square root of the variance
print(np.sqrt(variance))

# Print the standard deviation
print(np.std(versicolor_petal_length))

as one increases and the other increases (positive coorelation) and iff both decrease its positive corelation.

but if one is positive and another is negative then theres negative correlation.

EXAMPLE OF SCATTERPLOT


plt.plot(versicolor_petal_length,versicolor_petal_width,marker='.',linestyle='none')
.


EXAMPLE OF COVARIANCE MEASUREMENT


# Compute the covariance matrix: covariance_matrix
covariance_matrix = np.cov(versicolor_petal_length,versicolor_petal_width)

# Print covariance matrix
print(covariance_matrix)

# Extract covariance of length and width of petals: petal_cov
petal_cov = covariance_matrix[1,0]

# Print the length/width covariance
print(petal_cov)


EXAMPLE OF HOW THE PEARSON R IS COMPUTERED 

def pearson_r(x, y):
    """Compute Pearson correlation coefficient between two arrays."""
    # Compute correlation matrix: corr_mat
    corr_mat = np.corrcoef(x,y)

    # Return entry [0,1]
    return corr_mat[0,1]

# Compute Pearson correlation coefficient for I. versicolor: r
r = pearson_r(versicolor_petal_length,versicolor_petal_width)

# Print the result
print(r)



